=== GPT BUNDLE | mar 23 sep 2025 19:37:34 -03 ===
Repo: dropshipping-store

===== BEGIN app/page.tsx =====
import "server-only";
import Hero from "@/components/Hero";
import SectionHeader from "@/components/SectionHeader";
import ProductSkeleton from "@/components/ProductSkeleton";
import Link from "next/link";
import { supabaseServer } from "@/lib/supabaseServer";
import PreviewDebug from "@/components/PreviewDebug";
import ProductCard from "@/components/ProductCard";

export const dynamic = "force-dynamic";

type Producto = {
  id: string;
  nombre: string;
  precio?: number | null;
  imagen?: string | null;
  imagen_url?: string | null;
  image_url?: string | null;
  image?: string | null;
  envio?: string | null;
  categoria_slug?: string | null;
  destacado?: boolean | null;
  created_at?: string | null;
  ventas?: number | null;
};

const SELECT_COLS =
  "id,nombre,precio,imagen,imagen_url,image_url,image,envio,categoria_slug,destacado,created_at,ventas";

const MOCKS = [
  { id: "m1", nombre: "Organizador minimal", imagen: "https://images.unsplash.com/photo-1505693416388-ac5ce068fe85?q=80&w=1200&auto=format&fit=crop" },
  { id: "m2", nombre: "Botella térmica", imagen: "https://images.unsplash.com/photo-1502741126161-b048400d085a?q=80&w=1200&auto=format&fit=crop" },
  { id: "m3", nombre: "Auriculares", imagen: "https://images.unsplash.com/photo-1518770660439-4636190af475?q=80&w=1200&auto=format&fit=crop" },
  { id: "m4", nombre: "Silla ergonómica", imagen: "https://images.unsplash.com/photo-1503602642458-232111445657?q=80&w=1200&auto=format&fit=crop" },
  { id: "m5", nombre: "Lámpara cálida", imagen: "https://images.unsplash.com/photo-1493666438817-866a91353ca9?q=80&w=1200&auto=format&fit=crop" },
  { id: "m6", nombre: "Mochila urbana", imagen: "https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?q=80&w=1200&auto=format&fit=crop" }
];

const IMG_FALLBACK = "https://images.unsplash.com/photo-1517832207067-4db24a2ae47c?q=80&w=1200&auto=format&fit=crop";

function pickImg(p: Partial<Producto> & {
  imagen?: string | null;
  imagen_url?: string | null;
  image_url?: string | null;
  image?: string | null;
}) {
  const toStr = (v: unknown) => (typeof v === "string" ? v.trim() : "");
  const cands = [p.imagen, p.imagen_url, p.image_url, p.image].map(toStr).filter(Boolean);
  return cands[0] || IMG_FALLBACK;
}

async function getHomeData() {
  try {
    const supa = supabaseServer();
    if (!supa) {
      return { destacados: [] as Producto[], nuevos: [] as Producto[], top: [] as Producto[] };
    }

    let destacados: Producto[] = [];
    try {
      const { data } = await supa
        .from("productos")
        .select(SELECT_COLS)
        .eq("destacado", true)
        .order("id", { ascending: true })
        .limit(6);
      destacados = (data ?? []) as Producto[];
    } catch (e) {
      console.error("Supabase destacados:", e);
      destacados = [];
    }

    let nuevos: Producto[] = [];
    try {
      const r1 = await supa
        .from("productos")
        .select(SELECT_COLS)
        .order("created_at", { ascending: false })
        .limit(6);
      nuevos = (r1.data ?? []) as Producto[];
      if (nuevos.length === 0) {
        const r2 = await supa
          .from("productos")
          .select(SELECT_COLS)
          .order("id", { ascending: false })
          .limit(6);
        nuevos = (r2.data ?? []) as Producto[];
      }
    } catch (e) {
      console.error("Supabase nuevos:", e);
      nuevos = [];
    }

    let top: Producto[] = [];
    try {
      const r1 = await supa
        .from("productos")
        .select(SELECT_COLS)
        .order("ventas", { ascending: false })
        .limit(6);
      top = (r1.data ?? []) as Producto[];
      if (top.length === 0) {
        const r2 = await supa
          .from("productos")
          .select(SELECT_COLS)
          .order("id", { ascending: true })
          .limit(6);
        top = (r2.data ?? []) as Producto[];
      }
    } catch (e) {
      console.error("Supabase top:", e);
      top = [];
    }

    return { destacados, nuevos, top };
  } catch (e) {
    console.error("getHomeData fatal:", e);
    return { destacados: [] as Producto[], nuevos: [] as Producto[], top: [] as Producto[] };
  }
}

export default async function Home() {
  const isPreview = process.env.NEXT_PUBLIC_VERCEL_ENV === "preview";
  const hasSupabase = Boolean(process.env.NEXT_PUBLIC_SUPABASE_URL && process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
  const { destacados, nuevos, top } = await getHomeData();

  return (
    <main className="space-y-12">
      <Hero />

      {/* NUEVOS */}
      <section className="mx-auto max-w-6xl px-4 sm:px-6">
        <SectionHeader title="Nuevos" subtitle="Lo último que estamos destacando en la tienda" />
        {nuevos.length > 0 ? (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 lunaria-grid-in">
            {nuevos.map((m) => (
              <li key={m.id}>
                <ProductCard
                  id={m.id}
                  nombre={m.nombre}
                  precio={m.precio}
                  envio={m.envio ?? undefined}
                  imagen={m.imagen ?? undefined}
                  imagen_url={m.imagen_url ?? undefined}
                  image_url={m.image_url ?? undefined}
                  image={m.image ?? undefined}
                  href={`/producto/${m.id}`}
                />
              </li>
            ))}
          </ul>
        ) : (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4">
            {MOCKS.slice(0,6).map((m) => (
              <li key={m.id} className="rounded-xl border overflow-hidden bg-white group">
                <div className="aspect-[4/3] overflow-hidden bg-gray-100">
                  <img src={m.imagen} alt={m.nombre} className="w-full h-full object-cover group-hover:scale-[1.02] transition-transform" />
                </div>
                <div className="p-3">
                  <div className="text-sm font-semibold line-clamp-1">{m.nombre}</div>
                </div>
              </li>
            ))}
          </ul>
        )}
      </section>

      {/* TENDENCIAS (destacados) */}
      <section className="mx-auto max-w-6xl px-4 sm:px-6">
        <SectionHeader title="Tendencias" subtitle="Se mueven mucho estos días" />
        {destacados.length > 0 ? (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 lunaria-grid-in">
            {destacados.map((m) => (
              <li key={m.id}>
                <ProductCard
                  id={m.id}
                  nombre={m.nombre}
                  precio={m.precio}
                  envio={m.envio ?? undefined}
                  imagen={m.imagen ?? undefined}
                  imagen_url={m.imagen_url ?? undefined}
                  image_url={m.image_url ?? undefined}
                  image={m.image ?? undefined}
                  href={`/producto/${m.id}`}
                />
              </li>
            ))}
          </ul>
        ) : (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4">
            {Array.from({ length: 6 }).map((_, i) => (
              <li key={i}><ProductSkeleton /></li>
            ))}
          </ul>
        )}
      </section>

      {/* TOP VENTAS */}
      <section className="mx-auto max-w-6xl px-4 sm:px-6">
        <div className="flex items-end justify-between">
          <SectionHeader
            title="Top Ventas"
            subtitle="Los favoritos de la comunidad"
            className="mb-0"
          />
          <Link href="/categorias" className="text-sm font-semibold rounded-xl px-3 py-1.5 hover:bg-neutral-100">
            Ver todas las categorías →
          </Link>
        </div>
        {top.length > 0 ? (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4 lunaria-grid-in">
            {top.map((m) => (
              <li key={m.id}>
                <ProductCard
                  id={m.id}
                  nombre={m.nombre}
                  precio={m.precio}
                  envio={m.envio ?? undefined}
                  imagen={m.imagen ?? undefined}
                  imagen_url={m.imagen_url ?? undefined}
                  image_url={m.image_url ?? undefined}
                  image={m.image ?? undefined}
                  href={`/producto/${m.id}`}
                />
              </li>
            ))}
          </ul>
        ) : (
          <ul className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-4">
            {Array.from({ length: 6 }).map((_, i) => (
              <li key={i}><ProductSkeleton /></li>
            ))}
          </ul>
        )}
      </section>

      {/* Debug sólo en preview */}
      <PreviewDebug isPreview={isPreview} hasSupabase={hasSupabase} counts={{
        nuevos: nuevos.length, destacados: destacados.length, top: top.length
      }} />
    </main>
  );
}

===== END app/page.tsx =====

===== BEGIN app/globals.css =====
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  @apply bg-gray-50 text-gray-900 antialiased;
  font-family: 'Inter', sans-serif;
}

h1,h2,h3,h4,h5,h6 {
  @apply font-bold text-gray-900;
}

a {
  @apply text-emerald-700 hover:text-emerald-800 transition;
}

/* === LUNARIA: nivel1-estetica === */
/* Tipografías modernas sin tocar componentes: Inter (texto) + Poppins (titulares) */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Poppins:wght@600;700&display=swap');

:root {
  /* Paleta discreta y consistente (ajustable si ya usas Tailwind theming) */
  --brand: #16a34a;         /* verde acción */
  --brand-600: #16a34a;
  --brand-700: #15803d;
  --ink: #0f172a;           /* slate-900 */
  --muted: #475569;         /* slate-600 */
  --card: #ffffff;
  --card-border: #e5e7eb;
  --shadow: 0 8px 24px rgba(0,0,0,.06);
  --shadow-lg: 0 12px 32px rgba(0,0,0,.10);
}

html, body {
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  color: var(--ink);
}

h1, h2, .hero-title, .section-title {
  font-family: Poppins, Inter, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  letter-spacing: -0.01em;
}

/* Header pegado con fondo traslúcido y blur */
header, .site-header {
  position: sticky;
  top: 0;
  z-index: 50;
  background: rgba(255,255,255,0.7);
  backdrop-filter: saturate(1.2) blur(8px);
  border-bottom: 1px solid rgba(0,0,0,0.04);
}

/* Tarjetas (ProductListClient/ProductCard) — sombras y micro-animación */
.border.rounded-2xl,
.border.rounded-xl,
.card,
li.border.rounded-2xl,
div.border.rounded-2xl {
  transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease;
  will-change: transform;
  border-color: var(--card-border);
}

.border.rounded-2xl:hover,
.border.rounded-xl:hover,
.card:hover,
li.border.rounded-2xl:hover,
div.border.rounded-2xl:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow);
  border-color: rgba(0,0,0,0.06);
}

/* Imagen dentro de la tarjeta: sutil zoom al hover */
.border.rounded-2xl .object-cover,
.border.rounded-xl .object-cover,
.card .object-cover {
  transition: transform .35s ease;
}

.border.rounded-2xl:hover .object-cover,
.border.rounded-xl:hover .object-cover,
.card:hover .object-cover {
  transform: scale(1.03);
}

/* Botones principales: color consistente y feedback */
button,
a.button,
.btn,
[class*="bg-lime-600"],
[class*="bg-green-600"] {
  transition: background-color .15s ease, box-shadow .15s ease, transform .15s ease;
}

button:hover,
a.button:hover,
.btn:hover,
[class*="bg-lime-600"]:hover,
[class*="bg-green-600"]:hover {
  filter: brightness(0.98);
  box-shadow: 0 6px 16px rgba(22,163,74,0.18);
}

button:active,
a.button:active,
.btn:active {
  transform: translateY(1px);
}

/* Links de categorías (tiles) — resalte al hover */
a[data-cat], .cat-tile {
  transition: transform .18s ease, box-shadow .18s ease;
}

a[data-cat]:hover, .cat-tile:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow);
}

/* Fajas de confianza: mejor legibilidad */
.trust-strip, .trust-belt, .features-row {
  color: var(--muted);
}

/* Fin nivel1-estetica */

/* === Nivel 3 Visual: Animaciones y helpers === */
@keyframes lnr-fade-up {
  0% { opacity: 0; transform: translateY(10px) scale(.98); }
  100% { opacity: 1; transform: translateY(0) scale(1); }
}
@keyframes lnr-fade-in {
  0% { opacity: 0 }
  100% { opacity: 1 }
}
@keyframes lnr-shine {
  0% { transform: translateX(-150%) }
  100% { transform: translateX(150%) }
}
.lnr-appear { animation: lnr-fade-up .5s ease-out both; }
.lnr-appear-slow { animation: lnr-fade-up .7s ease-out both; }
.lnr-appear-delay { animation-delay: .12s }
.lnr-appear-delay-lg { animation-delay: .2s }

.card-3d {
  transition: transform .25s ease, box-shadow .25s ease;
  will-change: transform;
}
.card-3d:hover {
  transform: translateY(-2px) scale(1.01);
  box-shadow: 0 12px 30px -12px rgb(0 0 0 / .25);
}
.img-zoom {
  transform: scale(1.02);
  transition: transform .5s ease, filter .5s ease;
}
.group:hover .img-zoom { transform: scale(1.08); }

.lnr-overlay-grad {
  background: linear-gradient(180deg, rgba(0,0,0,.0) 30%, rgba(0,0,0,.35) 75%, rgba(0,0,0,.55) 100%);
}

.lnr-shimmer {
  position: relative;
  overflow: hidden;
}
.lnr-shimmer::after {
  content: "";
  position: absolute; inset: 0;
  transform: translateX(-150%);
  background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.18) 45%, rgba(255,255,255,0) 70%);
  animation: lnr-shine 1.25s ease-in-out infinite;
}

.badge-pill {
  border-radius: 9999px;
  padding: .35rem .6rem;
  font-weight: 600;
  font-size: .8rem;
}

/* Botón verde consistente con “Explorar categorías” */
.btn-brand {
  @apply inline-flex items-center gap-2 rounded-xl bg-lime-600 text-white px-3 py-2 hover:bg-lime-700 transition;
}

/* Etiqueta en tiles de categorías */
.cat-chip {
  @apply inline-flex items-center gap-2 rounded-xl bg-lime-600/95 text-white px-3 py-1.5 shadow-md;
}

/* === LUNARIA: visual-pack-level4 (do not remove) === */
/* Paleta y tokens */
:root {
  /* mismo verde que usamos en el Hero (lime-600 aprox) */
  --brand-green: #65a30d;
  --brand-green-600: #65a30d;
  --brand-green-700: #4d7c0f;
  --brand-ink: #0b0f19;
  --card-shadow: 0 8px 24px rgba(15, 23, 42, 0.08);
  --card-shadow-hover: 0 16px 40px rgba(15, 23, 42, 0.12);
}

/* Micro-animaciones base */
@keyframes lunaria-fade-in-up {
  from { opacity: 0; transform: translateY(8px); }
  to   { opacity: 1; transform: translateY(0); }
}

/* Botón/etiqueta de marca (para sobre-imagen o badges) */
.lunaria-btn,
.badge-brand {
  display: inline-flex;
  align-items: center;
  gap: .5rem;
  padding: .45rem .8rem;
  font-weight: 600;
  border-radius: 9999px;
  color: #fff;
  background-color: var(--brand-green);
  box-shadow: 0 4px 16px rgba(101,163,13,.25);
  transition: transform .12s ease, box-shadow .12s ease, background-color .12s ease;
}
.lunaria-btn:hover,
.badge-brand:hover {
  transform: translateY(-1px);
  background-color: var(--brand-green-700);
  box-shadow: 0 8px 24px rgba(101,163,13,.35);
}

/* Cards genéricas (product tiles, etc.) */
:where(.grid) :where(.border.rounded-2xl) {
  border-color: rgba(2,6,23,.06); /* slate-950/6 */
  transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease, background-color .18s ease;
  box-shadow: var(--card-shadow);
  background: #fff;
}
:where(.grid) :where(.border.rounded-2xl):hover {
  transform: translateY(-2px);
  box-shadow: var(--card-shadow-hover);
  border-color: rgba(2,6,23,.10);
}

/* Imágenes en grillas 4:3 con zoom suave al hover */
:where(.aspect-\[4\/3\]) img,
:where(.aspect-\[4\/3\]) .object-cover {
  transition: transform .35s ease, filter .35s ease;
  will-change: transform;
}
:where(li,div).border.rounded-2xl:hover :where(.aspect-\[4\/3\]) img,
:where(li,div).border.rounded-2xl:hover :where(.aspect-\[4\/3\]) .object-cover {
  transform: scale(1.03);
}

/* Precio destacado y tipografía suave */
.lunaria-price {
  color: var(--brand-green-700);
  font-weight: 800;
  letter-spacing: .1px;
}

/* Títulos compactos y legibles */
.lunaria-title {
  font-weight: 700;
  letter-spacing: .2px;
  color: var(--brand-ink);
}

/* Sutil divider entre info y CTA */
.lunaria-divider {
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(2,6,23,.08), transparent);
  margin: .5rem 0;
}

/* Hover de CTA negro (coherente con el tema actual) */
.lunaria-cta {
  background: #0b0f19;
  color: #fff;
  border-radius: .75rem;
  transition: transform .12s ease, box-shadow .12s ease, background-color .12s ease;
}
.lunaria-cta:hover {
  transform: translateY(-1px);
  background: #111827;
  box-shadow: 0 10px 24px rgba(17,24,39,.22);
}

/* Etiquetas sobre tiles de categorías: centradas y legibles */
.lunaria-cat-chip {
  position: absolute;
  left: 50%;
  bottom: .9rem;
  transform: translateX(-50%);
  z-index: 2;
  backdrop-filter: saturate(120%) blur(4px);
}
.lunaria-cat-chip .icon {
  display: inline-block;
  width: 1rem; height: 1rem;
}

/* Pequeño efecto parallax óptico al pasar el mouse */
.lunaria-tilt:hover { transform: perspective(900px) translateZ(0) rotateX(.6deg) rotateY(.6deg); }

/* Animación de aparición para grids */
.lunaria-grid-in > * {
  animation: lunaria-fade-in-up .35s ease both;
}
.lunaria-grid-in > *:nth-child(2) { animation-delay: .02s; }
.lunaria-grid-in > *:nth-child(3) { animation-delay: .04s; }
.lunaria-grid-in > *:nth-child(4) { animation-delay: .06s; }
.lunaria-grid-in > *:nth-child(5) { animation-delay: .08s; }
.lunaria-grid-in > *:nth-child(6) { animation-delay: .10s; }

/* Hero CTA: asegura el mismo verde global */
.lunaria-hero-cta {
  background-color: var(--brand-green) !important;
}
.lunaria-hero-cta:hover {
  background-color: var(--brand-green-700) !important;
}

/* Protección por si el texto de categorías queda oscuro sobre imágenes */
.lunaria-text-shadow {
  text-shadow: 0 1px 8px rgba(0,0,0,.35), 0 0 1px rgba(0,0,0,.6);
}

/* === /LUNARIA: visual-pack-level4 === */

/* tokens lunaria (idempotente) */
:root{
  --lunaria-green:#3eb489;
  --lunaria-green-hover:#36a178;
}

/* --- Neutraliza cualquier pseudo-badge que duplique el contador del carrito --- */
[data-testid="floating-cart"]::after,
[data-testid="floating-cart"]::before {
  content: none !important;
}

/* ========== Visual Pack Nivel 7–9 (no logic) ========== */
:root {
  --lunaria-radius-xl: 1.25rem;
  --lunaria-shadow-sm: 0 2px 10px rgba(0,0,0,.06);
  --lunaria-shadow-md: 0 6px 24px rgba(0,0,0,.08);
  --lunaria-shadow-lg: 0 12px 40px rgba(0,0,0,.12);
  --lunaria-anim-fast: 180ms;
  --lunaria-anim-med: 280ms;
}

/* Tipografía un poco más “retail” */
html {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Tarjetas (categorías y productos) — hover sutil + elevación */
.grid .border.rounded-2xl,
.grid .rounded-2xl.border {
  border-radius: var(--lunaria-radius-xl) !important;
  box-shadow: var(--lunaria-shadow-sm);
  transition: transform var(--lunaria-anim-med) ease, box-shadow var(--lunaria-anim-med) ease, filter var(--lunaria-anim-med) ease;
  will-change: transform, box-shadow, filter;
  background: #fff;
}

.grid .border.rounded-2xl:hover,
.grid .rounded-2xl.border:hover {
  transform: translateY(-3px);
  box-shadow: var(--lunaria-shadow-md);
}

/* Imágenes dentro de tarjetas: zoom y “shine” suave */
.grid .border.rounded-2xl .bg-gray-100,
.grid .rounded-2xl.border .bg-gray-100 {
  overflow: hidden;
  position: relative;
}

.grid .border.rounded-2xl img,
.grid .rounded-2xl.border img {
  transition: transform var(--lunaria-anim-med) ease, filter var(--lunaria-anim-med) ease;
  will-change: transform, filter;
}

.grid .border.rounded-2xl:hover img,
.grid .rounded-2xl.border:hover img {
  transform: scale(1.03);
  filter: saturate(1.05) contrast(1.03);
}

/* Efecto “shine” diagonal opcional */
.grid .border.rounded-2xl .bg-gray-100::after,
.grid .rounded-2xl.border .bg-gray-100::after {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(115deg, rgba(255,255,255,0) 20%, rgba(255,255,255,.18) 45%, rgba(255,255,255,0) 70%);
  transform: translateX(-120%);
  transition: transform 700ms ease;
  pointer-events: none;
}

@media (hover:hover) {
  .grid .border.rounded-2xl:hover .bg-gray-100::after,
  .grid .rounded-2xl.border:hover .bg-gray-100::after {
    transform: translateX(120%);
  }
}

/* Botones primarios coherentes (verde oficial del Hero) */
:root {
  --lunaria-green: #16a34a;       /* Tailwind green-600 del botón "Explorar categorías" */
  --lunaria-green-hover: #15803d; /* green-700 */
}

.btn-primary,
button.bg-lime-600,
a.bg-lime-600 {
  background-color: var(--lunaria-green) !important;
  color: #fff !important;
  border-radius: 0.85rem !important;
  box-shadow: 0 8px 18px rgba(22,163,74,.22);
  transition: transform var(--lunaria-anim-fast) ease, box-shadow var(--lunaria-anim-fast) ease, background-color var(--lunaria-anim-fast) ease;
}

.btn-primary:hover,
button.bg-lime-600:hover,
a.bg-lime-600:hover {
  background-color: var(--lunaria-green-hover) !important;
  transform: translateY(-1px);
  box-shadow: 0 10px 22px rgba(21,128,61,.28);
}

/* Badges / chips (envío, destacado) */
.badge,
p.text-sm.text-gray-600 {
  display: inline-flex;
  align-items: center;
  gap: .4rem;
  padding: .18rem .6rem;
  border-radius: 999px;
  background: rgba(16, 185, 129, .08); /* emerald-500/08 */
  color: #065f46; /* emerald-800 */
  font-weight: 600;
}

/* Header/sticky pulido (si existe sticky en tu layout) */
.sticky-header {
  backdrop-filter: saturate(1.2) blur(6px);
  background-color: rgba(255,255,255,.72);
  box-shadow: 0 2px 12px rgba(0,0,0,.05);
}

/* Micro animación para iconos (categorías) */
.category-icon {
  transition: transform var(--lunaria-anim-fast) ease;
}
.category-icon:hover {
  transform: scale(1.08) rotate(-1deg);
}

/* CTA en hero: ligero “breathing” */
@media (prefers-reduced-motion: no-preference) {
  .hero-cta-breathe {
    animation: breathe 3.2s ease-in-out infinite;
  }
  @keyframes breathe {
    0%   { transform: translateY(0) scale(1); box-shadow: var(--lunaria-shadow-md); }
    50%  { transform: translateY(-1px) scale(1.01); box-shadow: var(--lunaria-shadow-lg); }
    100% { transform: translateY(0) scale(1); box-shadow: var(--lunaria-shadow-md); }
  }
}

/* Sombra fine-grain al mover el mouse (soporte amplio usando :hover) */
.card-hover:hover {
  box-shadow: var(--lunaria-shadow-lg);
}

/* Foco accesible bonito */
:focus-visible {
  outline: 3px solid rgba(22,163,74,.45);
  outline-offset: 3px;
  border-radius: 8px;
}

/* ========== /Visual Pack Nivel 7–9 ========== */

/* === NIVEL100:BEGIN === */
/* Paleta y motion helpers (no invasivo) */
:root {
  --lnr-green: #3e8e41; /* verde hero */
  --lnr-green-ink: #2f6b32;
  --lnr-ink: #0f172a;   /* neutral-900 */
  --lnr-card: 255,255,255;
  --lnr-shadow: 15 23 42; /* slate-900 */
}

/* Suaviza todo */
html { scroll-behavior: smooth; }

/* Cards genéricas: .border.rounded-2xl */
.border.rounded-2xl {
  transition:
    transform 220ms cubic-bezier(.2,.7,.2,1),
    box-shadow 220ms cubic-bezier(.2,.7,.2,1),
    background-color 220ms ease;
  will-change: transform, box-shadow;
  background-color: rgba(var(--lnr-card),1);
  box-shadow:
    0 1px 2px rgba(var(--lnr-shadow)/0.06),
    0 8px 24px rgba(var(--lnr-shadow)/0.04);
}
.border.rounded-2xl:hover {
  transform: translateY(-4px);
  box-shadow:
    0 6px 16px rgba(var(--lnr-shadow)/0.06),
    0 18px 48px rgba(var(--lnr-shadow)/0.08);
}

/* Imágenes dentro de cards: zoom sutil al hover del contenedor */
.border.rounded-2xl img,
.border.rounded-2xl picture img {
  transition: transform 300ms ease, filter 300ms ease, opacity 200ms ease;
  will-change: transform, filter;
}
.border.rounded-2xl:hover img {
  transform: scale(1.03);
  filter: saturate(1.05);
}

/* Botones “primarios” por patrón de color verde hero */
button.bg-lime-600,
a.bg-lime-600,
[class*="bg-lime-600"] {
  background-color: var(--lnr-green) !important;
  border-color: var(--lnr-green-ink) !important;
  transition: transform 150ms ease, box-shadow 150ms ease, background-color 150ms ease;
  box-shadow: 0 4px 14px rgba(62,142,65,.15);
}
button.bg-lime-600:hover,
a.bg-lime-600:hover,
[class*="bg-lime-600"]:hover {
  background-color: var(--lnr-green-ink) !important;
  transform: translateY(-1px);
  box-shadow: 0 8px 22px rgba(62,142,65,.25);
}
button.bg-lime-600:active,
a.bg-lime-600:active,
[class*="bg-lime-600"]:active {
  transform: translateY(0);
  box-shadow: 0 3px 10px rgba(62,142,65,.18);
}

/* Etiquetas de categoría “pill” si van dentro de tiles */
.badge-pill,
[class*="badge"][class*="pill"] {
  background: linear-gradient(180deg, var(--lnr-green), var(--lnr-green-ink));
  color: #fff;
  border-radius: 9999px;
  box-shadow: 0 6px 20px rgba(62,142,65,.25);
}

/* Skeleton shimmer reutilizable (añade class="skeleton" a placeholders si lo necesitas) */
@keyframes lnr-shimmer {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}
.skeleton {
  position: relative;
  overflow: hidden;
  background: linear-gradient(90deg,
    rgba(226,232,240,.7) 0%,
    rgba(241,245,249,.9) 20%,
    rgba(226,232,240,.7) 40%,
    rgba(226,232,240,.7) 100%);
  background-size: 200% 100%;
  animation: lnr-shimmer 1.2s infinite linear;
}

/* Micro bounce al agregar al carro (aplica a .added-bounce si la pones en el botón tras click) */
@keyframes lnr-bounce {
  0% { transform: scale(1); }
  30% { transform: scale(1.08); }
  60% { transform: scale(0.98); }
  100% { transform: scale(1); }
}
.added-bounce { animation: lnr-bounce 360ms cubic-bezier(.2,.7,.2,1); }

/* Back-to-top si existe un #backToTop */
#backToTop {
  transition: opacity .2s ease, transform .2s ease;
  box-shadow: 0 8px 24px rgba(15,23,42,.18);
}
#backToTop:hover { transform: translateY(-2px); }

/* Grid hover: realzar item activo */
.grid > *:hover { position: relative; z-index: 2; }

/* Hero: sutil parallax sobre imágenes directas */
.hero img { transition: transform 600ms cubic-bezier(.2,.7,.2,1); will-change: transform; }
.hero:hover img { transform: scale(1.02); }
/* === NIVEL100:END === */


/* === Nivel 9999999: Parallax + Gradiente Animado (solo visual) === */
@keyframes lunariaGradientPulse {
  0%   { opacity: .65; }
  50%  { opacity: .85; }
  100% { opacity: .65; }
}

.lunaria-parallax {
  position: relative;
  isolation: isolate;
  overflow: hidden;
}

.lunaria-parallax::before {
  /* Imagen de fondo – puedes cambiarla cuando quieras */
  content: "";
  position: absolute;
  inset: 0;
  background-image:
    url("https://images.unsplash.com/photo-1500530855697-b586d89ba3ee?q=80&w=1920&auto=format&fit=crop");
  background-size: cover;
  background-position: center;
  /* Parallax nativo y suave */
  background-attachment: fixed;
  transform: translateZ(0);
  z-index: -2;
  filter: saturate(1.05) contrast(1.02);
}

.lunaria-parallax::after {
  /* Gradiente animado para dar profundidad */
  content: "";
  position: absolute;
  inset: 0;
  background:
    radial-gradient(1000px 500px at 20% 10%, rgba(255,255,255,.25), transparent 50%),
    radial-gradient(900px 480px at 80% 20%, rgba(16,185,129,.18), transparent 55%),
    linear-gradient(to bottom, rgba(255,255,255,.65), rgba(255,255,255,.92) 60%);
  z-index: -1;
  animation: lunariaGradientPulse 9s ease-in-out infinite;
}

/* Respeto accesibilidad (reduce motion) */
@media (prefers-reduced-motion: reduce) {
  .lunaria-parallax::after { animation: none; }
  .lunaria-parallax::before { background-attachment: scroll; }
}

/* Botón “Explorar categorías” – reforzamos feeling premium sin cambiar tu verde */
.lunaria-cta {
  transition: transform .2s ease, box-shadow .2s ease;
  box-shadow: 0 8px 20px rgba(101,163,13,0.25);
}
.lunaria-cta:hover {
  transform: translateY(-1px);
  box-shadow: 0 10px 24px rgba(101,163,13,0.33);
}

/* Copete del hero con un toque de brillo sutil */
.lunaria-hero-subtle {
  text-shadow: 0 1px 0 rgba(255,255,255,.6);
}
/* === Fin Nivel 9999999 === */

/* === A11y & Micro-UX (bundle) === */
:focus-visible {
  outline: 3px solid #2ECC71;
  outline-offset: 2px;
  border-radius: .5rem;
}
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: .01ms !important;
    scroll-behavior: auto !important;
  }
}
html { scroll-behavior: smooth; }

/* Helpers de contraste en chips/badges si hiciera falta */
.badge-contrast {
  text-shadow: 0 1px 1px rgba(0,0,0,.25);
}

/* Skeleton util (por si queremos placeholder más tarde) */
.skeleton {
  position: relative;
  overflow: hidden;
  background: #f2f2f2;
}
.skeleton::after {
  content: "";
  position: absolute;
  inset: 0;
  transform: translateX(-100%);
  background: linear-gradient(90deg, transparent, rgba(0,0,0,.06), transparent);
  animation: skeleton-shimmer 1.1s infinite;
}
@keyframes skeleton-shimmer {
  100% { transform: translateX(100%); }
}

/* === BackToTop: forzar visibilidad y evitar solape con carrito === */
:where(.back-to-top, #backtotop, [data-backtotop], a[href="#top"]){
  position: fixed !important;
  left: 1rem !important;
  right: auto !important;
  bottom: 1rem !important;
  transform: none !important;
  opacity: 1 !important;
  visibility: visible !important;
  pointer-events: auto !important;
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
  z-index: 95 !important;
  border-radius: 9999px;
  box-shadow: 0 6px 18px rgba(0,0,0,.12);
}
@media (min-width: 768px){
  :where(.back-to-top, #backtotop, [data-backtotop], a[href="#top"]){
    left: auto !important;
    right: 6.5rem !important; /* offset para FloatingCart */
  }
}
@supports (padding: env(safe-area-inset-bottom)){
  :where(.back-to-top, #backtotop, [data-backtotop], a[href="#top"]){
    bottom: calc(1rem + env(safe-area-inset-bottom)) !important;
  }
}

/* breadcrumbs */
.breadcrumb-hero {
  /* separador opcional si se usa sobre fondos */
  text-shadow: 0 1px 0 rgba(255,255,255,.8);
}

/* títulos de sección home pro */
.section-title {
  @apply text-xl sm:text-2xl font-semibold tracking-tight;
}
.section-sub {
  @apply text-gray-600 text-sm;
}

/* PARALLAX UTILITIES */
.parallax-root { perspective: 1000px; }
.parallax-scene { transform-style: preserve-3d; height: 100%; position: relative; }
.parallax-bg {
  position: absolute; inset: 0;
  background-position: center; background-size: cover; background-repeat: no-repeat;
  transform: translateZ(-300px) scale(1.35);
  will-change: transform;
  filter: saturate(105%) contrast(102%);
}
.parallax-fg { position: relative; z-index: 1; }
@media (min-width: 768px) {
  /* Fallback extra suave por si el navegador ignora 3D: */
  .parallax-bg-fixed { background-attachment: fixed; }
}

/* PARALLAX UTILITIES v2 */
.parallax-root { perspective: 800px; }
.parallax-scene { transform-style: preserve-3d; height: 100%; position: relative; }
.parallax-bg {
  position: absolute; inset: 0;
  background-position: center 30%;
  background-size: cover;
  background-repeat: no-repeat;
  transform: translateZ(-120px) scale(1.12);
  will-change: transform;
  transition: transform 300ms ease-out;
  filter: saturate(104%) contrast(102%);
}
/* Suaviza bordes y da respiro visual */
.hero-clip { border-radius: 1rem; overflow: hidden; }
/* Degradado más sutil (menos “leche” sobre la foto) */
.hero-fade::after{
  content:"";
  position:absolute; inset:0;
  background: linear-gradient(to top, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.55) 45%, rgba(255,255,255,0.15) 100%);
  pointer-events:none;
}
/* En móviles desactivamos 3D: se ve más limpio */
@media (max-width: 767px) {
  .parallax-root { perspective: none; }
  .parallax-scene { transform-style: flat; }
  .parallax-bg { transform: none; }
  .parallax-bg-fixed { background-attachment: scroll; }
}
/* Respeto a usuarios con reduce-motion */
@media (prefers-reduced-motion: reduce) {
  .parallax-bg { transition: none; transform: none; }
}

===== END app/globals.css =====

===== BEGIN components/ProductCard.tsx =====
'use client';
import Link from "next/link";

type Props = {
  id: string;
  nombre: string;
  precio?: number | null;
  envio?: string;
  imagen?: string | null;
  imagen_url?: string | null;
  image_url?: string | null;
  image?: string | null;
  href?: string;
};

const FALLBACK =
  "https://images.unsplash.com/photo-1517832207067-4db24a2ae47c?q=80&w=1200&auto=format&fit=crop";

function pickImg(p: Props) {
  const toStr = (v: unknown) => (typeof v === "string" ? v.trim() : "");
  const cands = [p.imagen, p.imagen_url, p.image_url, p.image].map(toStr).filter(Boolean);
  return cands[0] || FALLBACK;
}
function fmtCLP(v?: number | null) {
  if (v == null) return "$—";
  try {
    return Intl.NumberFormat("es-CL", { style: "currency", currency: "CLP", maximumFractionDigits: 0 }).format(v);
  } catch { return `$${v}`; }
}

export default function ProductCard(props: Props){
  const src = pickImg(props);
  const url = props.href || `/producto/${props.id}`;
  return (
    <Link href={url} className="block rounded-2xl border overflow-hidden bg-white group card-3d">
      <div className="aspect-[4/3] overflow-hidden bg-gray-100">
        <img
          src={src}
          alt={props.nombre || "Producto"}
          className="w-full h-full object-cover group-hover:scale-[1.03] transition-transform"
          loading="lazy" decoding="async" referrerPolicy="no-referrer"
          onError={(e) => {
            const img = e.currentTarget as HTMLImageElement;
            if (img.dataset.fallbackApplied !== "1") { img.dataset.fallbackApplied = "1"; img.src = FALLBACK; }
          }}
        />
      </div>
      <div className="p-3">
        <div className="lunaria-title text-sm line-clamp-1">{props.nombre}</div>
        <div className="mt-1 flex items-center justify-between">
          <span className="lunaria-price text-sm">{fmtCLP(props.precio)}</span>
          <span className="badge text-[11px]">{props.envio || "Envío estándar"}</span>
        </div>
      </div>
    </Link>
  );
}

===== END components/ProductCard.tsx =====

===== BEGIN components/ProductListClient.tsx =====
'use client';
import React from "react";

export type Producto = {
  id: string;
  nombre: string;
  precio?: number | null;
  imagen?: string | null;
  imagen_url?: string | null;
  image_url?: string | null;
  image?: string | null;
  envio?: string | null;
  destacado?: boolean | null;
  categoria?: string | null;
  categoria_slug?: string | null;
};

type Props = { items: Producto[] };

const FALLBACK =
  "https://images.unsplash.com/photo-1517832207067-4db24a2ae47c?q=80&w=1200&auto=format&fit=crop";

function pickUrl(p: Producto): string {
  const cands = [p.imagen, p.imagen_url, p.image_url, p.image];
  const first = cands.find((v) => typeof v === "string" && v.trim().length > 0);
  return (first ?? "").toString().trim();
}
function fmtCLP(v?: number | null) {
  if (v == null) return "$—";
  try {
    return Intl.NumberFormat("es-CL", {
      style: "currency",
      currency: "CLP",
      maximumFractionDigits: 0,
    }).format(v);
  } catch {
    return `$${v}`;
  }
}

export default function ProductListClient({ items }: Props) {
  const data = Array.isArray(items) ? items : [];
  if (data.length === 0) {
    return (
      <p className="text-gray-600">
        No hay productos disponibles en esta categoría por ahora.
      </p>
    );
  }

  return (
    <ul className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
      {data.map((p) => {
        let src = pickUrl(p);
        if (!src && p.categoria_slug === "bienestar") {
          src = FALLBACK;
        }
        const onErr: React.ReactEventHandler<HTMLImageElement> = (e) => {
          const img = e.currentTarget as HTMLImageElement;
          if (img.dataset.fallbackApplied !== "1") {
            img.dataset.fallbackApplied = "1";
            img.src = FALLBACK;
          }
        };
        return (
          <li key={p.id} className="border rounded-2xl p-4 hover:bg-gray-50 transition">
            <div className="aspect-[4/3] w-full mb-3 overflow-hidden rounded-xl bg-gray-100">
              <img
                src={src || FALLBACK}
                alt={p.nombre || "Producto"}
                className="w-full h-full object-cover"
                loading="lazy"
                decoding="async"
                referrerPolicy="no-referrer"
                onError={onErr}
              />
            </div>
            <h3 className="font-semibold">{p.nombre}</h3>
            <p className="text-sm text-gray-600">{p.envio || "Envío estándar"}</p>
            <div className="mt-2 flex items-center justify-between">
              <span className="font-bold">{fmtCLP(p.precio ?? null)}</span>
              <button
                className="px-3 py-1 rounded-xl bg-black text-white text-sm"
                onClick={() => alert(`Agregado: ${p.nombre}`)}
              >
                Agregar
              </button>
            </div>
          </li>
        );
      })}
    </ul>
  );
}

===== END components/ProductListClient.tsx =====

===== BEGIN components/SectionHeader.tsx =====
'use client';
type Props = { title: string; subtitle?: string; className?: string };
export default function SectionHeader({ title, subtitle, className="" }: Props){
  return (
    <header className={`mb-4 ${className}`}>
      <h2 className="section-title">{title}</h2>
      {subtitle ? <p className="section-sub mt-1">{subtitle}</p> : null}
    </header>
  );
}

===== END components/SectionHeader.tsx =====

===== BEGIN components/ProductSkeleton.tsx =====
'use client';
export default function ProductSkeleton(){
  return (
    <div className="rounded-xl border overflow-hidden bg-white">
      <div className="aspect-[4/3] bg-gray-100 skeleton" />
      <div className="p-4 space-y-2">
        <div className="h-4 w-2/3 bg-gray-200 rounded skeleton" />
        <div className="h-3 w-1/2 bg-gray-200 rounded skeleton" />
        <div className="h-8 w-24 bg-gray-200 rounded-lg skeleton" />
      </div>
    </div>
  );
}

===== END components/ProductSkeleton.tsx =====

===== BEGIN components/Hero.tsx =====
'use client';
import Link from "next/link";

export default function Hero() {
  const bg = "url('https://images.unsplash.com/photo-1523275335684-37898b6baf30?q=80&w=1920&auto=format&fit=crop')";
  return (
    <section className="relative hero-clip h-[50vh] md:h-[62vh] lg:h-[66vh] bg-neutral-100">
      <div className="parallax-root h-full">
        <div className="parallax-scene">
          <div
            className="parallax-bg parallax-bg-fixed"
            style={{ backgroundImage: bg }}
            aria-hidden="true"
          />
          <div className="parallax-fg relative h-full hero-fade">
            <div className="relative z-10 h-full mx-auto max-w-6xl px-4 sm:px-6 flex flex-col items-start justify-end pb-10 md:pb-14">
              <h1 className="text-3xl md:text-5xl font-extrabold tracking-tight text-neutral-900 drop-shadow-sm">
                Descubre cosas útiles y bonitas
              </h1>
              <p className="mt-2 md:mt-3 text-neutral-700 max-w-xl">
                Productos prácticos, bien elegidos, con envío simple. Explora por categoría o mira lo nuevo.
              </p>
              <div className="mt-4 flex items-center gap-3">
                <Link
                  href="/categorias"
                  className="inline-flex items-center gap-2 rounded-xl bg-lime-600 px-4 py-2.5 text-white font-semibold shadow-sm hover:bg-lime-700 transition"
                >
                  Explorar categorías
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                    <path d="M5 12h14M13 5l7 7-7 7" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                  </svg>
                </Link>
                <Link
                  href="/"
                  className="inline-flex items-center gap-2 rounded-xl border px-4 py-2.5 font-semibold text-neutral-800 hover:bg-white transition"
                >
                  Ver novedades
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

===== END components/Hero.tsx =====

===== BEGIN components/PreviewDebug.tsx =====
'use client';
type Props = {
  isPreview: boolean;
  hasSupabase: boolean;
  counts: { nuevos: number; destacados: number; top: number };
};
export default function PreviewDebug({ isPreview, hasSupabase, counts }: Props) {
  if (!isPreview) return null;
  return (
    <div style={{
      position:'fixed', bottom:16, left:16, zIndex:60,
      background:'rgba(255,255,255,.95)', border:'1px solid #e5e7eb',
      borderRadius:12, padding:'10px 12px', boxShadow:'0 8px 24px rgba(0,0,0,.08)'
    }}>
      <div style={{fontWeight:800, fontSize:12, marginBottom:6}}>PreviewDebug</div>
      <ul style={{fontSize:12, lineHeight:1.3}}>
        <li>VERCEL_ENV: <b>{isPreview ? 'preview' : 'other'}</b></li>
        <li>Supabase envs: <b style={{color:hasSupabase?'#16a34a':'#dc2626'}}>
          {hasSupabase ? 'OK' : 'FALTAN'}</b></li>
        <li>Nuevos: <b>{counts.nuevos}</b></li>
        <li>Destacados: <b>{counts.destacados}</b></li>
        <li>Top: <b>{counts.top}</b></li>
      </ul>
    </div>
  );
}

===== END components/PreviewDebug.tsx =====

===== BEGIN app/producto/[id]/page.tsx =====
import "server-only";
import Link from "next/link";
import { supabaseServer } from "@/lib/supabaseServer";

export const dynamic = "force-dynamic";

type Producto = {
  id: string;
  nombre: string;
  precio?: number | null;
  descripcion?: string | null;
  imagen?: string | null;
  imagen_url?: string | null;
  image_url?: string | null;
  image?: string | null;
  envio?: string | null;
  categoria_slug?: string | null;
};

const SELECT = "id,nombre,precio,descripcion,imagen,imagen_url,image_url,image,envio,categoria_slug";

const FALLBACK_IMG = "https://images.unsplash.com/photo-1517832207067-4db24a2ae47c?q=80&w=1200&auto=format&fit=crop";
const pick = (p: Partial<Producto>) => {
  const vals = [p.imagen, p.imagen_url, p.image_url, p.image].map(v => typeof v === "string" ? v.trim() : "").filter(Boolean);
  return vals[0] || FALLBACK_IMG;
};
const fmtCLP = (v?: number | null) => {
  if (v == null) return "$—";
  try { return Intl.NumberFormat("es-CL",{style:"currency",currency:"CLP",maximumFractionDigits:0}).format(v); }
  catch { return `$${v}`; }
};

async function getProducto(id: string): Promise<Producto | null> {
  const supa = supabaseServer();
  if (!supa) {
    return { id, nombre: "Producto", precio: null, image_url: FALLBACK_IMG, envio: "Envío estándar", descripcion: "Descripción no disponible por ahora." };
  }
  try {
    const { data, error } = await supa.from("productos").select(SELECT).eq("id", id).maybeSingle();
    if (error) console.error("Supabase producto:", error);
    return (data as Producto) ?? null;
  } catch (e) {
    console.error("getProducto fatal:", e);
    return null;
  }
}

export default async function ProductoPage({ params }: { params: { id: string } }) {
  const prod = await getProducto(params.id);
  if (!prod) {
    return (
      <main className="mx-auto max-w-6xl px-4 sm:px-6 py-8">
        <div className="rounded-xl border p-6 bg-white">
          <h1 className="text-xl font-bold">Producto no encontrado</h1>
          <p className="text-gray-600 mt-1">Puede que haya sido removido o esté temporalmente no disponible.</p>
          <div className="mt-4"><Link className="btn-brand" href="/">Volver al inicio</Link></div>
        </div>
      </main>
    );
  }
  const img = pick(prod);
  return (
    <main className="mx-auto max-w-6xl px-4 sm:px-6 py-8">
      <nav className="text-sm text-gray-500 mb-4">
        <Link href="/" className="hover:underline">Inicio</Link>
        <span> / </span>
        <Link href="/categorias" className="hover:underline">Categorías</Link>
        <span> / </span>
        <span className="text-gray-800">{prod.nombre}</span>
      </nav>
      <div className="grid md:grid-cols-2 gap-6">
        <div className="rounded-2xl border bg-white overflow-hidden">
          <div className="aspect-[4/3] bg-gray-100">
            <img src={img} alt={prod.nombre || "Producto"} className="w-full h-full object-cover" />
          </div>
        </div>
        <div className="rounded-2xl border bg-white p-5">
          <h1 className="text-2xl font-extrabold tracking-tight">{prod.nombre}</h1>
          <p className="mt-1 text-sm text-gray-600">{prod.envio || "Envío estándar"}</p>
          <div className="mt-3 text-2xl font-black lunaria-price">{fmtCLP(prod.precio)}</div>
          {prod.descripcion ? (
            <p className="mt-4 text-gray-700 leading-relaxed">{prod.descripcion}</p>
          ) : (
            <p className="mt-4 text-gray-600">Descripción no disponible por ahora.</p>
          )}
          <div className="lunaria-divider" />
          <div className="mt-4 flex items-center gap-3">
            <button type="button" className="lunaria-cta px-5 py-3 font-semibold" onClick={() => alert(`Agregado: ${prod.nombre}`)}>
              Agregar al carrito
            </button>
            <Link href="/" className="rounded-xl border px-4 py-3 font-semibold hover:bg-white">Seguir explorando</Link>
          </div>
        </div>
      </div>
    </main>
  );
}

===== END app/producto/[id]/page.tsx =====

===== BEGIN app/producto/[id]/loading.tsx =====
export default function LoadingProduct(){
  return (
    <main className="mx-auto max-w-6xl px-4 sm:px-6 py-8">
      <div className="grid md:grid-cols-2 gap-6">
        <div className="rounded-2xl border bg-white overflow-hidden">
          <div className="aspect-[4/3] skeleton" />
        </div>
        <div className="rounded-2xl border bg-white p-5 space-y-3">
          <div className="h-7 w-2/3 bg-gray-200 rounded skeleton" />
          <div className="h-4 w-1/3 bg-gray-200 rounded skeleton" />
          <div className="h-8 w-40 bg-gray-200 rounded skeleton mt-2" />
          <div className="h-20 w-full bg-gray-200 rounded skeleton mt-4" />
          <div className="h-10 w-44 bg-gray-200 rounded skeleton mt-6" />
        </div>
      </div>
    </main>
  );
}

===== END app/producto/[id]/loading.tsx =====

=== SUMMARY ===
Todos los archivos listados fueron volcados en este bundle.
Si ves /* MISSING */ arriba, ese archivo no existe actualmente.
