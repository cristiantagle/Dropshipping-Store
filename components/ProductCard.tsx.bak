'use client';
import React from "react";
import Link from "next/link";

export type Props = {
  id: string;
  name: string;
  description: string | null;
  price_cents: number;
  image_url: string | null;
  category_slug: string | null;
};

const FALLBACK = "/lunaria-icon.png";

function pickImg(p: Props) {
  const toStr = (v: unknown) => (typeof v === "string" ? v.trim() : "");
  const cands = [p.image_url].map(toStr).filter(Boolean);
  return cands[0] || FALLBACK;
}

function fmtCLP(v?: number | null) {
  if (v == null) return "$—";
  return Intl.NumberFormat("es-CL", {
    style: "currency",
    currency: "CLP",
    maximumFractionDigits: 0,
  }).format(v / 100);
}

export default function ProductCard(p: Props) {
  const src = pickImg(p);

  return (
    <li className="border rounded-2xl hover:bg-gray-50 transition">
      <Link href={`/producto/${p.id}`} className="block p-4">
        <div className="aspect-[4/3] w-full mb-3 overflow-hidden rounded-xl bg-gray-100">
          <img
            src={src}
            alt={p.name}
            className="w-full h-full object-cover"
            loading="lazy"
            decoding="async"
            referrerPolicy="no-referrer"
            onError={(e) => {
              const img = e.currentTarget as HTMLImageElement;
              if (img.dataset.fallbackApplied !== "1") {
                img.dataset.fallbackApplied = "1";
                img.src = FALLBACK;
              }
            }}
          />
        </div>
        <h3 className="font-semibold">{p.name}</h3>
        <p className="text-sm text-gray-600">{p.description || "Sin descripción"}</p>
        <div className="mt-2 flex items-center justify-between">
          <span className="font-bold">{fmtCLP(p.price_cents)}</span>
          <span className="px-3 py-1 rounded-xl bg-black text-white text-sm">Ver</span>
        </div>
      </Link>
    </li>
  );
}
